name: Deploy To Prod

on:
  workflow_dispatch:
  push:
    branches:
      - main


jobs:
  build:
    environment: prod

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 20.x
    - run: yarn install --frozen-lockfile
    - run: yarn build
    - run: yarn test

    - name: RSync to Prod Server
      uses: D3rHase/rsync-deploy-action@v0.2
      with:
        HOST: ${{ secrets.SSH_HOST }}
        PORT: ${{ secrets.SSH_PORT }}
        USER: ${{ secrets.SSH_USER }}
        PRIVATE_SSH_KEY: ${{ secrets.SSH_KEY }}
        REPOSITORY_PATH: ${{ secrets.SSH_REPO_PATH }}
        SERVER_PATH: ${{ secrets.SSH_SERVER_PATH }}

  deploy:
    environment: prod
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: appleboy/ssh-action@v1.0.0
      env:
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_AUTH_USER: ${{ secrets.DB_AUTH_USER }}
        DB_AUTH_PASS: ${{ secrets.DB_AUTH_PASS }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_ROOT_HOST: ${{ secrets.DB_ROOT_HOST }}
        DB_SYNC: ${{ secrets.DB_SYNC }}
        DB_LOGGING: ${{ secrets.DB_LOGGING }}
        DB_DATA_LOCATION: ${{ secrets.DB_DATA_LOCATION }}
        DB_CARD_FILE: ${{ secrets.DB_CARD_FILE }}
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        BOT_VER: ${{ vars.BOT_VER }}
        BOT_AUTHOR: ${{ vars.BOT_AUTHOR }}
        BOT_OWNERID: ${{ vars.BOT_OWNERID }}
        BOT_CLIENTID: ${{ vars.BOT_CLIENTID }}
        ABOUT_FUNDING: ${{ vars.ABOUT_FUNDING }}
        ABOUT_REPO: ${{ vars.ABOUT_REPO }}
        DATA_DIR: ${{ secrets.DATA_DIR }}
        EXPRESS_PORT: ${{ secrets.EXPRESS_PORT }}
        GDRIVESYNC_AUTO: ${{ vars.GDRIVESYNC_AUTO }}
        BOT_ADMINS: ${{ vars.BOT_ADMINS }}
        BOT_ENV: ${{ vars.BOT_ENV }}
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        envs: DB_NAME,DB_AUTH_USER,DB_AUTH_PASS,DB_HOST,DB_PORT,DB_ROOT_HOST,DB_CARD_FILE,DB_SYNC,DB_LOGGING,DB_DATA_LOCATION,BOT_TOKEN,BOT_VER,BOT_AUTHOR,BOT_OWNERID,BOT_CLIENTID,ABOUT_FUNDING,ABOUT_REPO,DATA_DIR,EXPRESS_PORT,GDRIVESYNC_AUTO,BOT_ADMINS,BOT_ENV
        script: |
          cd ${{ secrets.SSH_SERVER_PATH }} \
          && docker compose down \
          && (pm2 stop carddrop_prod || true) \
          && (pm2 delete carddrop_prod || true) \
          && docker compose up -d \
          && sleep 10 \
          && yarn run db:up \
          && pm2 start --name carddrop_prod dist/bot.js